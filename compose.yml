x-controller-common: &kafka-controller-common
  image: docker.io/apache/kafka:4.1.0
  restart: unless-stopped
  healthcheck:
      test: /opt/kafka/bin/kafka-cluster.sh list-endpoints --bootstrap-controller localhost:9093
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 1s
      start_interval: 1s

x-broker-common: &kafka-broker-common
  image: docker.io/apache/kafka:4.1.0
  restart: unless-stopped
  depends_on:
    controller-1:
      condition: service_healthy
    controller-2:
      condition: service_healthy
    controller-3:
      condition: service_healthy
  healthcheck:
    test: /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092
    interval: 60s
    timeout: 10s
    retries: 3
    start_period: 1s
    start_interval: 1s

services:
  kafka-ui:
    image: ghcr.io/kafbat/kafka-ui:v1.3.0
    restart: unless-stopped
    container_name: kafka-ui
    read_only: true
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_CLUSTER_NAME}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:9092,broker-2:9092,broker-3:9092,broker-4:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://apicurio:8080/apis/ccompat/v7
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_METRICS_TYPE: JMX
      DYNAMIC_CONFIG_ENABLED: true
    ports:
      - 127.0.0.1:${KAFKA_UI_PORT}:8080/tcp
    depends_on:
      broker-1:
        condition: service_healthy
      broker-2:
        condition: service_healthy
      broker-3:
        condition: service_healthy
      broker-4:
        condition: service_healthy
      apicurio:
        condition: service_healthy

  controller-1:
    <<: *kafka-controller-common
    container_name: kafka-controller-1
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/controller-1:/tmp/kafka-logs

  controller-2:
    <<: *kafka-controller-common
    container_name: kafka-controller-2
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/controller-2:/tmp/kafka-logs

  controller-3:
    <<: *kafka-controller-common
    container_name: kafka-controller-3
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/controller-3:/tmp/kafka-logs

  broker-1:
    <<: *kafka-broker-common
    container_name: kafka-broker-1
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-1:9092,EXTERNAL://${KAFKA_BROKER_1_IP}:${KAFKA_BROKER_1_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="${KAFKA_USERNAME}" \
        password="${KAFKA_PASSWORD}" \
        user_${KAFKA_USERNAME}="${KAFKA_PASSWORD}";
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/broker-1:/tmp/kafka-logs
    ports:
      - ${KAFKA_BROKER_1_PORT}:9094/tcp

  broker-2:
    <<: *kafka-broker-common
    container_name: kafka-broker-2
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-2:9092,EXTERNAL://${KAFKA_BROKER_2_IP}:${KAFKA_BROKER_2_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="${KAFKA_USERNAME}" \
        password="${KAFKA_PASSWORD}" \
        user_${KAFKA_USERNAME}="${KAFKA_PASSWORD}";
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/broker-2:/tmp/kafka-logs
    ports:
      - ${KAFKA_BROKER_2_PORT}:9094/tcp

  broker-3:
    <<: *kafka-broker-common
    container_name: kafka-broker-3
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-3:9092,EXTERNAL://${KAFKA_BROKER_3_IP}:${KAFKA_BROKER_3_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="${KAFKA_USERNAME}" \
        password="${KAFKA_PASSWORD}" \
        user_${KAFKA_USERNAME}="${KAFKA_PASSWORD}";
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/broker-3:/tmp/kafka-logs
    ports:
      - ${KAFKA_BROKER_3_PORT}:9094/tcp

  broker-4:
    <<: *kafka-broker-common
    container_name: kafka-broker-4
    environment:
      KAFKA_CLUSTER_ID: ${KAFKA_CLUSTER_ID}
      KAFKA_NODE_ID: 7
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker-4:9092,EXTERNAL://${KAFKA_BROKER_4_IP}:${KAFKA_BROKER_4_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="${KAFKA_USERNAME}" \
        password="${KAFKA_PASSWORD}" \
        user_${KAFKA_USERNAME}="${KAFKA_PASSWORD}";
      KAFKA_JMX_PORT: 9997
    volumes:
      - .data/broker-4:/tmp/kafka-logs
    ports:
      - ${KAFKA_BROKER_4_PORT}:9094/tcp


  apicurio:
    image: quay.io/apicurio/apicurio-registry:3.0.14
    restart: unless-stopped
    container_name: apicurio
    ports:
      - ${APICURIO_PORT}:8080/tcp
    environment:
      APICURIO_STORAGE_KIND: sql
      APICURIO_STORAGE_SQL_KIND: postgresql
      APICURIO_DATASOURCE_URL: jdbc:postgresql://apicurio-db:5432/${APICURIO_DB_DATABASE}
      APICURIO_DATASOURCE_USERNAME: ${APICURIO_DB_USER}
      APICURIO_DATASOURCE_PASSWORD: ${APICURIO_DB_PASSWORD}
    healthcheck:
      test: curl http://localhost:8080/apis/registry/v3
      interval: 60s
      timeout: 1s
      retries: 3
      start_period: 1s
      start_interval: 1s
    depends_on:
      apicurio-db:
        condition: service_healthy

  apicurio-db:
    image: docker.io/library/postgres:17.6
    restart: unless-stopped
    container_name: apicurio-db
    environment:
      POSTGRES_USER: ${APICURIO_DB_USER}
      POSTGRES_PASSWORD: ${APICURIO_DB_PASSWORD}
      POSTGRES_DB: ${APICURIO_DB_DATABASE}
    volumes:
      - .data/apicurio_db:/var/lib/postgresql/data
    shm_size: '256MB'
    healthcheck:
      test: pg_isready -U ${APICURIO_DB_USER} -d ${APICURIO_DB_DATABASE}
      interval: 60s
      timeout: 1s
      retries: 3
      start_period: 1s
      start_interval: 1s
